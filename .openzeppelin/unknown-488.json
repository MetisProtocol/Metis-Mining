{
  "manifestVersion": "3.2",
  "proxies": [],
  "impls": {
    "09b4d542a8d4f08980eff780755b835d155372294fe07e9358ad2b32d1c7c6da": {
      "address": "0x92DbA232034AC5F4481194ab11dcD0c2594D7a87",
      "txHash": "0xd2c584c5cc2491db380ad798f47a6c61dca2d0a3ede8db98f92178a76e6b8bd6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/mock/MockUpgradeableDAC.sol:561"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/mock/MockUpgradeableDAC.sol:566"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/mock/MockUpgradeableDAC.sol:625"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3670_storage)",
            "src": "contracts/mock/MockUpgradeableDAC.sol:689"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/mock/MockUpgradeableDAC.sol:853"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/mock/MockUpgradeableDAC.sol:876"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/mock/MockUpgradeableDAC.sol:930"
          },
          {
            "contract": "DAC",
            "label": "ADMIN_ROLE",
            "type": "t_bytes32",
            "src": "contracts/DAC.sol:951"
          },
          {
            "contract": "DAC",
            "label": "MINING_ROLE",
            "type": "t_bytes32",
            "src": "contracts/DAC.sol:952"
          },
          {
            "contract": "DAC",
            "label": "WHITELIST_ROLE",
            "type": "t_bytes32",
            "src": "contracts/DAC.sol:953"
          },
          {
            "contract": "DAC",
            "label": "DAOOpening",
            "type": "t_bool",
            "src": "contracts/DAC.sol:954"
          },
          {
            "contract": "DAC",
            "label": "Metis",
            "type": "t_contract(IMetisToken)43",
            "src": "contracts/DAC.sol:955"
          },
          {
            "contract": "DAC",
            "label": "MiningContract",
            "type": "t_contract(IMining)89",
            "src": "contracts/DAC.sol:956"
          },
          {
            "contract": "DAC",
            "label": "pool",
            "type": "t_array(t_struct(DACInfo)1508_storage)dyn_storage",
            "src": "contracts/DAC.sol:972"
          },
          {
            "contract": "DAC",
            "label": "whitelist",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DAC.sol:973"
          },
          {
            "contract": "DAC",
            "label": "relations",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)467_storage)",
            "src": "contracts/DAC.sol:974"
          },
          {
            "contract": "DAC",
            "label": "userToDAC",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DAC.sol:975"
          },
          {
            "contract": "DAC",
            "label": "invitationCodeToDAC",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/DAC.sol:976"
          },
          {
            "contract": "DAC",
            "label": "DACToInvitationCode",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/DAC.sol:977"
          },
          {
            "contract": "DAC",
            "label": "isInvitedUser",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/DAC.sol:978"
          },
          {
            "contract": "DAC",
            "label": "DISMISS_LIMIT",
            "type": "t_uint256",
            "src": "contracts/DAC.sol:979"
          },
          {
            "contract": "DAC",
            "label": "MIN_DEPOSIT",
            "type": "t_uint256",
            "src": "contracts/DAC.sol:980"
          },
          {
            "contract": "DAC",
            "label": "MAX_DEPOSIT",
            "type": "t_uint256",
            "src": "contracts/DAC.sol:981"
          },
          {
            "contract": "DAC",
            "label": "onlyInvitedUser",
            "type": "t_bool",
            "src": "contracts/DAC.sol:982"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IMetisToken)43": {
            "label": "contract IMetisToken"
          },
          "t_contract(IMining)89": {
            "label": "contract IMining"
          },
          "t_array(t_struct(DACInfo)1508_storage)dyn_storage": {
            "label": "struct DAC.DACInfo[]"
          },
          "t_struct(DACInfo)1508_storage": {
            "label": "struct DAC.DACInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "introduction",
                "type": "t_string_storage"
              },
              {
                "label": "category",
                "type": "t_string_storage"
              },
              {
                "label": "photo",
                "type": "t_string_storage"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "createTime",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(DACState)1489"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(DACState)1489": {
            "label": "enum DAC.DACState",
            "members": [
              "Dismissed",
              "Active"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)467_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)467_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)202_storage"
              }
            ]
          },
          "t_struct(Set)202_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3670_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3670_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3069_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3069_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2804_storage"
              }
            ]
          },
          "t_struct(Set)2804_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
